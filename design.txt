使用UDP协议，服务器端不用维护连接状状态使用sendto()和recvfrom();

sudo ip tuntap add dev tun99 mode tun

tun99     Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  
          POINTOPOINT NOARP MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:500 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)
		  
sudo ifconfig tun99 192.168.0.254 dstaddr 192.168.0.253 up
sudo ifconfig tun99 192.168.0.254 up
tun接口设置IP的用途是什么？按原来的方式是设置两个点对点地址，然后会自动生成一个到对端地址的路由。如果只设置一个tun接口ip，则不会生成路由

ip-10-77-2-2.ap *               255.255.255.255 UH    0      0        0 tun2
10.77.2.2是对端地址，10.77.2.1是tun接口地址，貌似并未任何地方使用。

tun99     Link encap:UNSPEC  HWaddr 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  
          inet addr:192.168.0.254  P-t-P:192.168.0.254  Mask:255.255.255.255
          UP POINTOPOINT NOARP MULTICAST  MTU:1500  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:500 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

sudo route add -net 192.168.0.0/24 dev tun99
tun接口相关路由，nat之后IP为内网地址，应该是需要设置路由才会转发到正确的接口
===============================================
分析：为一个TUN网卡支持多个客户端，理论上应该采用TUN网卡不设置地址，只添加网段路由的方式。建立连接时只要从网段中分配一个IP给client

TUN_interface
	TUN接口，对应一个TUN网卡
	tun接口添加
		删除tun网卡:		sudo ip tuntap del dev $TUN_NAME mode tun
		添加tun网卡:		sudo ip tuntap add dev $TUN_NAME mode tun
		设置tun网卡地址:	sudo ifconfig $TUN_NAME $TUN_ADDR dstaddr $TUN_DSTADDR up
		***：TUN网卡地址应该可以不用设置，而是通过添加路由的方式
	
系统启动参数：
	TUN接口名
	tunnel监听端口
	约定密钥
	抓包脚本名
	MTU
	DNS

打开TUN接口
	
tunnel
	选择一个socket服务端口，如8000
	监听8000端口
	int sockfd;
	sockfd=socket(AF_INET,SOCK_DGRM,0)

mainthread_tunnel：处理来自手机客户端的数据，若是第一次连接则由其它线程检查密钥并返回响应，若是数据，则放入缓冲池，由其它线程将数据发送给TUN，然后NAT发送到互联网
	recvfrom(tunnel)
		if 0:pw:id	sendto 0:param
			检查pw是否正确，否则记录非法连接（客户端ip，时间）
			param：-m 1400 -a $PRIVATE_ADDR 32 -d $DNS_ADDR -r 0.0.0.0 0
			记录client，记录的数据包括客户端ip，分配给客户端的私网ip
		if 1:data	检查client是否在池中，不是则丢弃，是则将数据放入缓冲池(send to TUN)
			检查client的ip是否在池中，不是则检查近期是否连接过？
				没有则丢弃，并记录非法链接（客户端IP，时间），
				近期有成功链接过则重新提示用户重新发送连接检查报文
该线程的核心是不断接收服务端口的数据，然后转给其它线程处理。若监听端口无数据时则会阻塞等待
#define MAXLINE 4096
struct sockaddr_in,cliaddr;
len=sizeof(cliaddr))
char mesg[MAXLINE]
recvfrom(sockfd,mesg,MAXLINE,0,pcliaddr,&len)


mainthread_TUN：处理来自互联网的响应数据，放入缓冲池，由其它线程将数据发送给对应的客户端手机
	read(TUN)
		数据放入缓冲池(send to tunnel)，查询client连接活动记录依据clientTunIP得到clientDstIP
该线程的核心是不断接收TUN端口的数据，然后转给其他线程处理。若监听的TUN接口无数据则会阻塞等待
		
其它线程(线程池)
	读取缓冲池(send to TUN)里的数据发送给对应TUN
		write(TUN)
	读取缓冲池(send to tunnel)里的数据发送给对应client
		sendto(tunnel)
	处理第一次连接密钥检查及已连接客户端数据维护
	
client连接记录
	clientIp
	port
	tunIp
	时间

数据缓冲池
	数据缓冲池send to TUN
		该缓冲池存放了来自客户端的数据，准备转发给internet（发给TUN，然后通过iptable nat转发出去）
		dstIP
		data
		......
		
	数据缓冲池sent to tunnel
		该缓冲池存放了来自internet（通过iptable nat转发给TUN的internet数据），准备转发给对应的客户端
		clientTunIP
		clientDstIP
		data
		.......
		
 -L. -static 编译使用静态链接
（-L.：表示要连接的库在当前目录中）

   CentOS的发行光盘里本身是有wireshark的rpm的，如果安装系统时组件没选上，那么可以从安装光盘里找。如能连网，那么用yum是最简单的：
      # yum install wireshark
      # yum install wireshark-gnome
      注意wireshark包本身只包含文本工具，这样并无法使用wireshark和图形界面。但提供了抓包基本功能。wireshark-gnome才提供wireshark（UI)工具，它依赖wireshark RPM。
[root@PowerEdgeT430 mobilegt]# yum info gcc
[root@PowerEdgeT430 mobilegt]# yum list gcc
Loaded plugins: fastestmirror, langpacks
Loading mirror speeds from cached hostfile
 * base: mirrors.aliyun.com
 * extras: mirrors.aliyun.com
 * updates: mirrors.aliyun.com
Installed Packages
gcc.x86_64                        4.8.5-16.el7                         @anaconda
[root@PowerEdgeT430 mobilegt]# yum check-update gcc
Loaded plugins: fastestmirror, langpacks
Loading mirror speeds from cached hostfile
 * base: mirrors.aliyun.com
 * extras: mirrors.aliyun.com
 * updates: mirrors.aliyun.com

=================================
=================================
CentOS 作为企业级服务器操作系统被广泛使用，其中使用C++开发服务器应用又是常见的，可是CentOS本身自带的GCC版本更新缓慢，要想使用
较新的GCC版本就是一个经常需要解决的问题，当然可以自行编译GCC源码，但是比较麻烦，而且很难做到多个GCC版本之间进行切换。

从CentOS6开始，CentOS自身提供了一种方式可以使用Scientific Linux distribution发行版的devtoolset-*来解决。具体使用方式如下：
1）安装scl发布源：yum install centos-release-scl-rh
2）安装GCC&GCC-C++：yum install devtoolset-3-gcc devtoolset-3-gcc-c++
这里面devtoolset-3是第3个版本，目前针对CentOS6&7支持3，4，6三个版本，分别对应GCC4.9，GCC5.3，GCC6.2，用户可以根据自己的需要选
择安装哪一个版本，当然可以同时安装多个版本。

3）根据需要使用：source /opt/rh/devtoolset-3/enable 进行切换，这里面devtoolset-3可以根据你是安装3，4，6进行切换。这个切换原
理也很简单，只是设置了一些环境变量。若要在启动的时候就生效，可以放置到~/.bashrc之中即可。

4）补充一下使用devtoolset-2（gcc 4.8.2)的方法：
（1）rpm --import http://linuxsoft.cern.ch/cern/slc6X/x86_64/RPM-GPG-KEY-cern
（2）wget -O /etc/yum.repos.d/slc6-devtoolset.repo http://linuxsoft.cern.ch/cern/devtoolset/slc6-devtoolset.repo
（3）yum install devtoolset-2-toolchain
       yum install devtoolset-2-gcc  devtoolset-2-gcc-c++
（4）source /opt/rh/devtoolset-2/enable

服务器上实际操作记录：
=========================
root@PowerEdgeT430 mobilegt]# yum install centos-release-scl-rh
Loaded plugins: fastestmirror, langpacks
Loading mirror speeds from cached hostfile
 * base: mirrors.aliyun.com
 * extras: mirrors.aliyun.com
 * updates: mirrors.aliyun.com
Resolving Dependencies
--> Running transaction check
---> Package centos-release-scl-rh.noarch 0:2-2.el7.centos will be installed
--> Finished Dependency Resolution

Dependencies Resolved

================================================================================
 Package                    Arch        Version               Repository   Size
================================================================================
Installing:
 centos-release-scl-rh      noarch      2-2.el7.centos        extras       12 k

Transaction Summary
================================================================================
Install  1 Package

Total download size: 12 k
Installed size: 19 k
Is this ok [y/d/N]: y
Downloading packages:
centos-release-scl-rh-2-2.el7.centos.noarch.rpm            |  12 kB   00:04     
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
Warning: RPMDB altered outside of yum.
** Found 6 pre-existing rpmdb problem(s), 'yum check' output follows:
icedtea-web-1.6.2-4.el7.x86_64 has missing requires of java-1.8.0-openjdk
jline-1.0-8.el7.noarch has missing requires of java >= ('0', '1.5', None)
1:libreoffice-core-5.0.6.2-14.el7.x86_64 has missing requires of java-headless >= ('1', '1.6', None)
1:libreoffice-ure-5.0.6.2-14.el7.x86_64 has missing requires of libjvm.so()(64bit)
2:postfix-2.10.1-6.el7.x86_64 has missing requires of libmysqlclient.so.18()(64bit)
2:postfix-2.10.1-6.el7.x86_64 has missing requires of libmysqlclient.so.18(libmysqlclient_18)(64bit)
  Installing : centos-release-scl-rh-2-2.el7.centos.noarch                  1/1 
  Verifying  : centos-release-scl-rh-2-2.el7.centos.noarch                  1/1 

Installed:
  centos-release-scl-rh.noarch 0:2-2.el7.centos                                 

Complete!
[root@PowerEdgeT430 mobilegt]# yum install devtoolset-4-gcc devtoolset-4-gcc-c++ 
Loaded plugins: fastestmirror, langpacks
centos-sclo-rh                                           | 2.9 kB     00:00     
centos-sclo-rh/x86_64/primary_db                           | 2.6 MB   00:06     
Loading mirror speeds from cached hostfile
 * base: mirrors.aliyun.com
 * extras: mirrors.aliyun.com
 * updates: mirrors.aliyun.com
Resolving Dependencies
--> Running transaction check
---> Package devtoolset-4-gcc.x86_64 0:5.3.1-6.1.el7 will be installed
--> Processing Dependency: devtoolset-4-runtime for package: devtoolset-4-gcc-5.3.1-6.1.el7.x86_64
---> Package devtoolset-4-gcc-c++.x86_64 0:5.3.1-6.1.el7 will be installed
--> Processing Dependency: devtoolset-4-libstdc++-devel = 5.3.1-6.1.el7 for package: devtoolset-4-gcc-c++-5.3.1-6.1.el7.x86_64
--> Running transaction check
---> Package devtoolset-4-libstdc++-devel.x86_64 0:5.3.1-6.1.el7 will be installed
---> Package devtoolset-4-runtime.x86_64 0:4.1-3.sc1.el7 will be installed
--> Finished Dependency Resolution

Dependencies Resolved

================================================================================
 Package                        Arch     Version         Repository        Size
================================================================================
Installing:
 devtoolset-4-gcc               x86_64   5.3.1-6.1.el7   centos-sclo-rh    26 M
 devtoolset-4-gcc-c++           x86_64   5.3.1-6.1.el7   centos-sclo-rh    10 M
Installing for dependencies:
 devtoolset-4-libstdc++-devel   x86_64   5.3.1-6.1.el7   centos-sclo-rh   2.5 M
 devtoolset-4-runtime           x86_64   4.1-3.sc1.el7   centos-sclo-rh    26 k

Transaction Summary
================================================================================
Install  2 Packages (+2 Dependent packages)

Total download size: 39 M
Installed size: 101 M
Is this ok [y/d/N]: y
Downloading packages:
warning: /var/cache/yum/x86_64/7/centos-sclo-rh/packages/devtoolset-4-gcc-c++-5.3.1-6.1.el7.x86_64.rpm: Header V4 RSA/SHA1 Signature, key ID f2ee9d55: NOKEY
Public key for devtoolset-4-gcc-c++-5.3.1-6.1.el7.x86_64.rpm is not installed
(1/4): devtoolset-4-gcc-c++-5.3.1-6.1.el7.x86_64.rpm       |  10 MB   00:17     
(2/4): devtoolset-4-libstdc++-devel-5.3.1-6.1.el7.x86_64.r | 2.5 MB   00:04     
(3/4): devtoolset-4-runtime-4.1-3.sc1.el7.x86_64.rpm       |  26 kB   00:00     
(4/4): devtoolset-4-gcc-5.3.1-6.1.el7.x86_64.rpm           |  26 MB   00:35     
--------------------------------------------------------------------------------
Total                                              1.1 MB/s |  39 MB  00:35     
Retrieving key from file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-SCLo
Importing GPG key 0xF2EE9D55:
 Userid     : "CentOS SoftwareCollections SIG (https://wiki.centos.org/SpecialInterestGroup/SCLo) <security@centos.org>"
 Fingerprint: c4db d535 b1fb ba14 f8ba 64a8 4eb8 4e71 f2ee 9d55
 Package    : centos-release-scl-rh-2-2.el7.centos.noarch (@extras)
 From       : /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-SCLo
Is this ok [y/N]: y
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : devtoolset-4-runtime-4.1-3.sc1.el7.x86_64                    1/4 
  Installing : devtoolset-4-libstdc++-devel-5.3.1-6.1.el7.x86_64            2/4 
  Installing : devtoolset-4-gcc-5.3.1-6.1.el7.x86_64                        3/4 
  Installing : devtoolset-4-gcc-c++-5.3.1-6.1.el7.x86_64                    4/4 
  Verifying  : devtoolset-4-libstdc++-devel-5.3.1-6.1.el7.x86_64            1/4 
  Verifying  : devtoolset-4-gcc-c++-5.3.1-6.1.el7.x86_64                    2/4 
  Verifying  : devtoolset-4-gcc-5.3.1-6.1.el7.x86_64                        3/4 
  Verifying  : devtoolset-4-runtime-4.1-3.sc1.el7.x86_64                    4/4 

Installed:
  devtoolset-4-gcc.x86_64 0:5.3.1-6.1.el7                                       
  devtoolset-4-gcc-c++.x86_64 0:5.3.1-6.1.el7                                   

Dependency Installed:
  devtoolset-4-libstdc++-devel.x86_64 0:5.3.1-6.1.el7                           
  devtoolset-4-runtime.x86_64 0:4.1-3.sc1.el7                                   

Complete!
[root@PowerEdgeT430 mobilegt]# gcc -version
gcc: error: unrecognized command line option ‘-version’
gcc: fatal error: no input files
compilation terminated.
[root@PowerEdgeT430 mobilegt]# gcc --version
gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-16)
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

[root@PowerEdgeT430 mobilegt]# source /opt/rh/devtoolset-4/enable
[root@PowerEdgeT430 mobilegt]# gcc --version
gcc (GCC) 5.3.1 20160406 (Red Hat 5.3.1-6)
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

[root@PowerEdgeT430 mobilegt]# 

设置dumpcap非root用户调用
ls -l /usr/bin/dumpcap
sudo chmod 4755 /usr/bin/dumpcap	

rywang@ubuntu:~/vpnserver/log$ cat mobilegt_vpn_log.0 | grep tunnelD | grep processTT | sort -t ' ' -k 14 > tunnelD_tmp_14.txt

rywang@ubuntu:~/vpnserver/log$ cat mobilegt_vpn_log.0 | grep tunD | grep processTT | sort -t ' ' -k 16 > tunD_tmp_16.txt 

rywang@ubuntu:~/vpnserver/log$ sort -n -t ':' tunD_tmp_16.txt -k 13 > 13.txt
rywang@ubuntu:~/vpnserver/log$ view 13.txt 
rywang@ubuntu:~/vpnserver/log$ sort -n -t ':' tunnelD_tmp_14.txt -k 9 > 9.txt
rywang@ubuntu:~/vpnserver/log$ view 9.txt 


vpnserver属于服务类程序，需设计添加运行态系统运行状况监测，动态调整运行参数的能力
1. 查看当前服务的客户端
2. 每个客户端收发包状况
3. 日志系统状况
	
